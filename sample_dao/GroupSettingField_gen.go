// auto generated by github.com/sakura-rip tool
// Version : develop@v1
// DO NOT EDIT

package dao

import (
	"github.com/sakura-rip/mongodbgen/sample"
	"go.mongodb.org/mongo-driver/bson"
)

func (cl *GroupDaoClient) DeleteSetting(id string) error {
	return cl.DeleteAttributes(id, bson.M{"setting": 1})
}

func (cl *GroupDaoClient) InsertOrUpdateSetting(id string, object interface{}) error {
	return cl.UpdateAttribute(id, bson.M{"setting": object})
}

func (cl *GroupDaoClient) GetGroupSetting(id string) (sample.Setting, error) {
	attribute, err := cl.GetAttribute(id, bson.D{{"setting", 1}})
	if err != nil {
		return sample.Setting{}, err
	}
	return attribute.Setting, err
}

func (cl *GroupDaoClient) GetGroupBySetting(profile sample.Setting) ([]sample.Group, error) {
	return cl.Get(bson.M{"setting": profile})
}

func (cl *GroupDaoClient) UpdateOrInsertGroupSettingAllowSearch(id string, allowSearch bool) error {
	return cl.UpdateAttribute(id, bson.M{"setting.allow_search": allowSearch})
}

func (cl *GroupDaoClient) DeleteGroupSettingAllowSearch(id string) error {
	return cl.DeleteAttributes(id, bson.M{"setting.allow_search": 1})
}

func (cl *GroupDaoClient) GetGroupSettingAllowSearch(id string) (val bool, err error) {
	group, err := cl.GetAttribute(id, bson.D{{"setting.allow_search", 1}})
	if err != nil {
		return val, err
	}
	return group.Setting.AllowSearch, err
}

func (cl *GroupDaoClient) GetGroupBySettingAllowSearch(allowSearch bool) ([]sample.Group, error) {
	return cl.Get(bson.M{"setting.allow_search": allowSearch})
}
