// auto generated by https://github.com/sakura-rip/mongodb-gen
// Version : [[version]]
// DO NOT EDIT

package dao


import (
	"go.mongodb.org/mongo-driver/bson"
)

func (cl *[[.Root.Name]]DaoClient) Delete[[.FieldName]]Field(id [[.Root.IdFieldType]]) error {
	return cl.DeleteAttributes(id, bson.M{"[[.BsonName]]": 1})
}

func (cl *[[.Root.Name]]DaoClient) InsertOrUpdate[[.FieldName]]Field(id [[.Root.IdFieldType]], object [[getArrayType .]]) error {
	return cl.UpdateAttribute(id, bson.M{"[[.BsonName]]": object})
}

func (cl *[[.Root.Name]]DaoClient) Insert[[.FieldName]](id [[.Root.IdFieldType]], object [[getArrayType .]]) error {
	return cl.AddToArray(id, bson.M{"[[.BsonName]]": object})
}

func (cl *[[.Root.Name]]DaoClient) Delete[[.FieldName]](id [[.Root.IdFieldType]], object [[getArrayType .]]) error {
	return cl.RemoveFromArray(id, bson.M{"[[.BsonName]]": object})
}

func (cl *[[.Root.Name]]DaoClient) Get[[.Root.Name]]By[[.FieldName]]In(objects ...interface{}) ([][[.Root.PackageName]].[[.Root.Name]], error) {
	return cl.Get(bson.M{"[[.BsonName]]": In(objects...)})
}

func (cl *[[.Root.Name]]DaoClient) Get[[.Root.Name]]By[[.FieldName]]ElemMatch(elem bson.M) ([][[.Root.PackageName]].[[.Root.Name]], error) {
	return cl.Get(bson.M{"[[.BsonName]]": ElemMatch(elem)})
}

func (cl *[[.Root.Name]]DaoClient) Get[[.Root.Name]]By[[.FieldName]]All(attr ...interface{}) ([][[.Root.PackageName]].[[.Root.Name]], error) {
	return cl.Get(bson.M{"[[.BsonName]]": All(attr)})
}

func (cl *[[.Root.Name]]DaoClient) Get[[.Root.Name]]By[[.FieldName]]Size(size int64) ([][[.Root.PackageName]].[[.Root.Name]], error) {
	return cl.Get(bson.M{"[[.BsonName]]": Size(size)})
}
