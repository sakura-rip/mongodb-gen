// auto generated by github.com/sakura-rip tool
// Version : [[version]]
// DO NOT EDIT

package dao


import (
	"go.mongodb.org/mongo-driver/bson"
)

func (cl *[[.Root.Name]]DaoClient) Delete[[.FieldName]](id [[.Root.IdFieldType]]) error {
	return cl.DeleteAttributes(id, bson.M{"[[.BsonName]]": 1})
}

func (cl *[[.Root.Name]]DaoClient) InsertOrUpdate[[.FieldName]](id [[.Root.IdFieldType]], object interface{}) error {
	return cl.UpdateAttribute(id, bson.M{"[[.BsonName]]": object})
}

func (cl *[[.Root.Name]]DaoClient) Get[[.Root.Name]][[.FieldName]](id [[.Root.IdFieldType]]) ([[.Root.PackageName]].[[.FieldName]], error) {
	attribute, err := cl.GetAttribute(id, bson.D{{"[[.BsonName]]", 1}})
	if err != nil {
		return [[.Root.PackageName]].[[.FieldName]]{}, err
	}
	return attribute.[[.FieldName]], err
}

func (cl *[[.Root.Name]]DaoClient) Get[[.Root.Name]]By[[.FieldName]](profile [[.Root.PackageName]].[[.FieldName]]) ([][[.Root.PackageName]].[[.Root.Name]], error) {
	return cl.Get(bson.M{"[[.BsonName]]": profile})
}

[[- range $i, $v := .StructFields]]
func (cl *[[.Root.Name]]DaoClient) UpdateOrInsert[[.Root.Name]][[.FieldName]][[$v.Name]](id [[.Root.IdFieldType]], [[$v.$v.LowerName]] [[$v.FieldType]]) error {
	return cl.UpdateAttribute(id, bson.M{"[[$v.LocationBson]]": [[$v.$v.LowerName]]})
}

func (cl *[[.Root.Name]]DaoClient) Delete[[.Root.Name]][[.FieldName]][[$v.Name]](id [[.Root.IdFieldType]]) error {
	return cl.DeleteAttributes(id, bson.M{"[[$v.LocationBson]]": 1})
}

func (cl *[[.Root.Name]]DaoClient) Get[[.Root.Name]][[.FieldName]][[$v.Name]](id [[.Root.IdFieldType]]) ([[$v.FieldType]], error) {
	[[.Root.LowerName]], err := cl.GetAttribute(id, bson.D{{"[[$v.LocationBson]]", 1}})
	if err != nil {
		return "", err
	}
	return [[.Root.LowerName]].[[$v.Location]], err
}

func (cl *[[.Root.Name]]DaoClient) Get[[.Root.Name]]By[[.FieldName]][[$v.Name]]([[$v.LowerName]] [[$v.FieldType]]) ([][[.Root.PackageName]].[[.Root.Name]], error) {
	return cl.Get(bson.M{"[[$v.LocationBson]]": [[$v.LowerName]]})
}
[[- end]]
